# Action which automatically publishes a package to propy when a new github release is created - https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository#creating-a-release
# Requirements - repository must use poetry (have a pyproject.toml file) and have a propy listed as an explicit source in the .toml file example
name: Publish Python Package

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::532968567499:role/OhIAMGithubActions-data-mesh-codeartifact
          aws-region: us-east-2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Specify your Python version

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Checkout the branch
        run: |
          git checkout main

      - name: Configure Poetry for Private Code Artifact
        run: |
          aws codeartifact login --tool pip --repository propy --domain prodigaltech --domain-owner 532968567499 --region us-east-2
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain prodigaltech --domain-owner 532968567499 --region us-east-2 --query authorizationToken --output text`
          poetry config repositories.propy https://prodigaltech-532968567499.d.codeartifact.us-east-2.amazonaws.com/pypi/propy/
          poetry config http-basic.propy aws $CODEARTIFACT_AUTH_TOKEN

      # Optional step, Updates Changelog in the repo
      - name: Update Changelog
        run: |
          echo "### ${{ github.event.release.tag_name }}" > new-changelog.md
          echo "${{ github.event.release.body }}" >> new-changelog.md
          echo "" >> new-changelog.md
          cat changelog.md >> new-changelog.md
          mv new-changelog.md changelog.md

      # Optional step, Updates version in pyproject.toml
      - name: Update version in pyproject.toml
        run: |
          VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')
          sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml

      # Only required if changelog and version is updated in pyproject.toml from above
      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add changelog.md pyproject.toml
          git commit -m "Bump up version to ${{ github.event.release.tag_name }}"

      # Only required if changelog and version is updated in pyproject.toml from above
      - name: Push changes
        run: git push origin main

      - name: Publish package
        run: |
          poetry publish --build --repository propy
